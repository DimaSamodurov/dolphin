= Dolphin

The friendly feature flipper.

== Warning

This hasn’t actually been used yet. So if you’re seeing this message, you might want to <b>hold off on using it</b> yourself.

== Installation

  (sudo) gem install dolphin

=== Rails

Configure Dolphin, adding some flippers. These are called later by the feature helper and determine whether a feature should be visible or not.

In <b>config/initializers/dolphin.rb</b>:
  Dolphin.configure do
    flipper(:live)  { |request| true }
    flipper(:false) { |request| false }
    flipper(:local) { |request| request.env['HTTP_X_FORWARDED_FOR'] == '127.0.0.1' }
  end

Add <b><tt>config/dolphin/features.yml</tt></b> and configure some features:

  features:
    local_feature: local
    ultra_feature: off

=== Other

Dolphin hasn’t been used outside of Rails. In theory, as long as you have a request object in scope where you’re including <tt>Dolphin::Helper</tt> you should be OK.

Installation is much the same as for Rails, but Dolphin needs to know where to find features.yml, so the configure block looks like this:

  Dolphin.configure do
    flipper(:live)  { |request| true }
    flipper(:false) { |request| false }
    flipper(:local) { |request| request.env['HTTP_X_FORWARDED_FOR'] == '127.0.0.1' }

    load_features_from CONFIG_DIRECTORY
  end

== Usage

Include <tt>Dolphin::Helper</tt>. The helpers expect to have a request object in scope once included.

  module ApplicationHelper
    include Dolphin::Helper
  end

=== Displaying a feature, or not

Wrap your awesomely volatile code in the feature helper:

<% feature :local_feature do %>
  <h1>MMM, TUNA</h1>
<% end %>

Dolphin will run the flipper associated with the feature and run what’s in the feature block if the flipper is positive. If a feature or a flipper isn’t found, there’s an error with the flipper, whatever’s in the feature block won’t be run.

=== Updating a feature

  rake dolphin:update_feature[feature_name,rule_name]

== Todo

* Allow multiple flippers per feature
* Allow the option of rendering a partial, rather than giving a block to the feature helper
* Remove dependency on request object

== License

Copyright (c) 2010 Matt Johnson, released under the MIT license
